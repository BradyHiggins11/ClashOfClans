/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNet {

using System;
using System.Runtime.InteropServices;

public class FT_ConnectProcess : PluginInterface2 {
  private HandleRef swigCPtr;

  internal FT_ConnectProcess(IntPtr cPtr, bool cMemoryOwn) : base(RakNetPINVOKE.FT_ConnectProcess_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(FT_ConnectProcess obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FT_ConnectProcess() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RakNetPINVOKE.delete_FT_ConnectProcess(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static FT_ConnectProcess GetInstance() {
    IntPtr cPtr = RakNetPINVOKE.FT_ConnectProcess_GetInstance();
    FT_ConnectProcess ret = (cPtr == IntPtr.Zero) ? null : new FT_ConnectProcess(cPtr, false);
    return ret;
  }

  public static void DestroyInstance(FT_ConnectProcess i) {
    RakNetPINVOKE.FT_ConnectProcess_DestroyInstance(FT_ConnectProcess.getCPtr(i));
  }

  public FT_ConnectProcess() : this(RakNetPINVOKE.new_FT_ConnectProcess(), true) {
  }

  public void SetResultHandler(FT_ConnectProcessResultHandler rh) {
    RakNetPINVOKE.FT_ConnectProcess_SetResultHandler(swigCPtr, FT_ConnectProcessResultHandler.getCPtr(rh));
  }

}

}

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace RakNet {

using System;
using System.Runtime.InteropServices;

public class FT_Session : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal FT_Session(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(FT_Session obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FT_Session() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          RakNetPINVOKE.delete_FT_Session(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public RakNetGUID guid {
    set {
      RakNetPINVOKE.FT_Session_guid_set(swigCPtr, RakNetGUID.getCPtr(value));
    } 
    get {
      IntPtr cPtr = RakNetPINVOKE.FT_Session_guid_get(swigCPtr);
      RakNetGUID ret = (cPtr == IntPtr.Zero) ? null : new RakNetGUID(cPtr, false);
      return ret;
    } 
  }

  public uint startTime {
    set {
      RakNetPINVOKE.FT_Session_startTime_set(swigCPtr, value);
    } 
    get {
      uint ret = RakNetPINVOKE.FT_Session_startTime_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsOutTime() {
    bool ret = RakNetPINVOKE.FT_Session_IsOutTime(swigCPtr);
    return ret;
  }

  public FT_Session() : this(RakNetPINVOKE.new_FT_Session__SWIG_0(), true) {
  }

  public FT_Session(RakNetGUID g) : this(RakNetPINVOKE.new_FT_Session__SWIG_1(RakNetGUID.getCPtr(g)), true) {
    if (RakNetPINVOKE.SWIGPendingException.Pending) throw RakNetPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool Equals(FT_Session c) {
    bool ret = RakNetPINVOKE.FT_Session_Equals(swigCPtr, FT_Session.getCPtr(c));
    if (RakNetPINVOKE.SWIGPendingException.Pending) throw RakNetPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
